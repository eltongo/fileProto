// Header was generated with class-dump
// Stripped off all unnecessary details. Kept only the definition of TabDocument which we will place our hook on.
@interface TabDocument : NSObject <AppBannerMetaTagContentObserver, FindOnPageToolbarDelegate, LoadingControllerDelegate, QuickWebsiteSearchEventListener, StoreBannerDelegate, WBSFluidProgressStateSource, WBSFluidProgressControllerWindowDelegate, WBUFormAutoFillControllerDelegate, WKNavigationDelegatePrivate, WKUIDelegatePrivate, _WKFindDelegate, _WKFormDelegate, _WKDiagnosticLoggingDelegate, _SFJavaScriptDialogControllerDelegate>
{
    id <TabDocumentDelegate> _delegate;
    BrowserController *_browserController;
    QuickLookDocumentController *_quickLookDocumentController;
    TabBarItem *_tabBarItem;
    LoadingController *_loadingController;
    QuickLookDocument *_quickLookDocument;
    _Bool _suspended;
    _Bool _hibernated;
    _Bool _allowURLAsTitle;
    _Bool _loadWasUserDriven;
    WBSFluidProgressState *_fluidProgressState;
    WBSFluidProgressController *_fluidProgressController;
    long long _downloadBytesExpected;
    unsigned long long _downloadBytesLoaded;
    _Bool _isActive;
    _Bool _isPagePaused;
    _Bool _isClosed;
    _Bool _frozenForNavigationGesture;
    ReaderContextWK2 *_readerContext;
    _Bool _hasDoneReaderAvailabilityDetection;
    NSTimer *_readerAvailabilityDetectionTimer;
    _Bool _userHasManipulatedVisibleRegion;
    _Bool _wasOpenedFromLink;
    _Bool _wasOpenedFromHistory;
    unsigned long long _downloadBackgroundTaskIdentifier;
    double _pageLoadStartTime;
    double _firstVisualLayoutTime;
    double _pageLoadStopTime;
    PageLoadTestStatistics *_pageLoadStatistics;
    PageLoadTest *_pageLoadTest;
    double _lastLoadCommittedTime;
    _Bool _goingBackAfterQuickStop;
    _Bool _clearVisitedLinkStyleAfterQuickStop;
    _Bool _showingReader;
    _Bool _shouldRestoreReader;
    long long _readerViewTopScrollOffset;
    long long _externalAppRedirectState;
    NSDictionary *_initialArticleScrollDictionaryForCloudTab;
    WBSHistoryVisit *_lastVisit;
    SafariWebView *_readerWebView;
    unsigned long long _progressAnimationSuppressedCount;
    _Bool _EVOrganizationNameIsValid;
    NSString *_EVOrganizationName;
    NSUserActivity *_continuityActivity;
    SafariWebView *_webView;
    NSError *_lastLoadError;
    _SFURLSpoofingMitigator *_URLSpoofingMitigator;
    _WKSessionState *_savedSessionState;
    _WKRemoteObjectInterface *_siteSpecificSearchEventListenerInterface;
    _WKRemoteObjectInterface *_appBannerMetaTagContentObserverInterface;
    _SFSafariSharingExtensionController *_sharingExtensionController;
    _SFReloadOptionsController *_reloadOptionsController;
    QuickLookDocumentWriter *_quickLookDocumentWriter;
    WBUInjectedJavaScriptController *_activityJSController;
    WBUWebClipMetadataFetcher *_webClipMetadataFetcher;
    _Bool _processingUserGesture;
    NSMutableArray *_fallbackURLs;
    NSString *_findString;
    SafariWebView *_findingInWebView;
    FindOnPageCompletionProvider *_findCompletionProvider;
    unsigned long long _numberOfFindMatches;
    long long _highlightedMatchIndex;
    WBUFormAutoFillController *_autoFillController;
    _SFFluidProgressView *_progressView;
    _SFNavigationBarItem *_navigationBarItem;
    _Bool _displayingStandaloneImage;
    _Bool _displayingStandaloneMedia;
    _Bool _quickLookDocumentCheckCompleted;
    _Bool _privateBrowsingEnabled;
    _Bool _restoringSessionState;
    _Bool _didFirstPaint;
    _SFJavaScriptDialogController *_javaScriptDialogController;
    _Bool _shouldSuppressJavaScriptDialogs;
    NSURL *_fileDownloadSourceURL;
    WebBookmark *_bookmarkForIconFetching;
    WKBackForwardListItem *_backForwardListItemForCurrentAppLinkBannerCheck;
    StoreBanner *_storeBannerPendingAppLinkBannerCheck;
    PinnableBanner *_appBannerPendingFirstPaint;
    _Bool _sourceApplicationIsValid;
    _Bool siteCustomIconPrecomposed;
    _Bool _shouldRevealAppLinkBannerForNextCommit;
    _Bool _storeBannersAreDisabled;
    _Bool _showingErrorPage;
    _Bool _suppressingProgressAnimationForNavigationGesture;
    _Bool _wantsReaderWhenActivated;
    _Bool _hibernatedDueToMemoryWarning;
    _Bool _showingContinuous;
    _Bool _blankDocument;
    _Bool _preparingForNewUserActivity;
    _Bool _didFinishDocumentLoad;
    _Bool _didFirstLayout;
    _Bool _didFirstVisuallyNonEmptyLayout;
    _Bool _downloadedFileTypeIsQuickLookDocument;
    _WKDownload *_fileDownload;
    NSString *_fileDownloadPath;
    UIImage *siteCustomIcon;
    _SFDownloadController *_downloadController;
    PinnableBanner *_appBanner;
    NSString *_sourceApplicationBundleIdentifierForNextCommit;
    TabOverviewItem *_tabOverviewItem;
    TiltedTabItem *_tiltedTabItem;
    WebBookmark *_readingListBookmark;
    unsigned long long _lastRenderTreeSize;
    WBSAutomaticReadingListItem *_automaticReadingListItem;
    NSURL *_webFeedURL;
    NSURL *_URLFromExternalApplication;
    _SFPageLoadErrorController *_pageLoadErrorController;
    _SFSafeBrowsingController *_safeBrowsingController;
    NSURL *_tabReuseURL;
    NSUUID *_UUID;
    double _lastViewedTime;
    LinkPreviewViewController *_previewViewController;
    struct CGPoint _scrollPoint;
}

+ (id)tabDocumentForWKWebView:(id)arg1;
@property(nonatomic) _Bool downloadedFileTypeIsQuickLookDocument; // @synthesize downloadedFileTypeIsQuickLookDocument=_downloadedFileTypeIsQuickLookDocument;
@property(retain, nonatomic) LinkPreviewViewController *previewViewController; // @synthesize previewViewController=_previewViewController;
@property(readonly, nonatomic) _Bool didFirstVisuallyNonEmptyLayout; // @synthesize didFirstVisuallyNonEmptyLayout=_didFirstVisuallyNonEmptyLayout;
@property(readonly, nonatomic) _Bool didFirstLayout; // @synthesize didFirstLayout=_didFirstLayout;
@property(readonly, nonatomic) _Bool didFinishDocumentLoad; // @synthesize didFinishDocumentLoad=_didFinishDocumentLoad;
@property(retain, nonatomic) WBSHistoryVisit *lastVisit; // @synthesize lastVisit=_lastVisit;
@property(nonatomic) double lastViewedTime; // @synthesize lastViewedTime=_lastViewedTime;
@property(copy, nonatomic) NSUUID *UUID; // @synthesize UUID=_UUID;
@property(copy, nonatomic) NSURL *tabReuseURL; // @synthesize tabReuseURL=_tabReuseURL;
@property(nonatomic) struct CGPoint scrollPoint; // @synthesize scrollPoint=_scrollPoint;
@property(readonly, nonatomic) _SFSafeBrowsingController *safeBrowsingController; // @synthesize safeBrowsingController=_safeBrowsingController;
@property(readonly, nonatomic) TabBarItem *tabBarItem; // @synthesize tabBarItem=_tabBarItem;
@property(nonatomic, getter=isPreparingForNewUserActivity) _Bool preparingForNewUserActivity; // @synthesize preparingForNewUserActivity=_preparingForNewUserActivity;
@property(nonatomic, getter=isBlankDocument) _Bool blankDocument; // @synthesize blankDocument=_blankDocument;
@property(readonly, nonatomic) SafariWebView *webView; // @synthesize webView=_webView;
@property(readonly, nonatomic) _SFPageLoadErrorController *pageLoadErrorController; // @synthesize pageLoadErrorController=_pageLoadErrorController;
@property(retain, nonatomic) NSURL *URLFromExternalApplication; // @synthesize URLFromExternalApplication=_URLFromExternalApplication;
@property(retain, nonatomic) NSURL *webFeedURL; // @synthesize webFeedURL=_webFeedURL;
@property(nonatomic, getter=isShowingContinuous) _Bool showingContinuous; // @synthesize showingContinuous=_showingContinuous;
@property(readonly, retain, nonatomic) WBSAutomaticReadingListItem *automaticReadingListItem; // @synthesize automaticReadingListItem=_automaticReadingListItem;
@property(nonatomic) unsigned long long lastRenderTreeSize; // @synthesize lastRenderTreeSize=_lastRenderTreeSize;
@property(nonatomic, getter=isRestoringSessionState) _Bool restoringSessionState; // @synthesize restoringSessionState=_restoringSessionState;
@property(nonatomic, getter=wasHibernatedDueToMemoryWarning) _Bool hibernatedDueToMemoryWarning; // @synthesize hibernatedDueToMemoryWarning=_hibernatedDueToMemoryWarning;
@property(nonatomic, getter=isDisplayingStandaloneMedia) _Bool displayingStandaloneMedia; // @synthesize displayingStandaloneMedia=_displayingStandaloneMedia;
@property(nonatomic, getter=isDisplayingStandaloneImage) _Bool displayingStandaloneImage; // @synthesize displayingStandaloneImage=_displayingStandaloneImage;
@property(readonly, nonatomic) _Bool privateBrowsingEnabled; // @synthesize privateBrowsingEnabled=_privateBrowsingEnabled;
@property(nonatomic) _Bool wantsReaderWhenActivated; // @synthesize wantsReaderWhenActivated=_wantsReaderWhenActivated;
@property(nonatomic) _Bool suppressingProgressAnimationForNavigationGesture; // @synthesize suppressingProgressAnimationForNavigationGesture=_suppressingProgressAnimationForNavigationGesture;
@property(retain, nonatomic) WebBookmark *readingListBookmark; // @synthesize readingListBookmark=_readingListBookmark;
@property(readonly, nonatomic) TiltedTabItem *tiltedTabItem; // @synthesize tiltedTabItem=_tiltedTabItem;
@property(readonly, nonatomic) TabOverviewItem *tabOverviewItem; // @synthesize tabOverviewItem=_tabOverviewItem;
@property(nonatomic) _Bool showingErrorPage; // @synthesize showingErrorPage=_showingErrorPage;
@property(nonatomic) _Bool storeBannersAreDisabled; // @synthesize storeBannersAreDisabled=_storeBannersAreDisabled;
@property(copy, nonatomic) NSString *sourceApplicationBundleIdentifierForNextCommit; // @synthesize sourceApplicationBundleIdentifierForNextCommit=_sourceApplicationBundleIdentifierForNextCommit;
@property(nonatomic) _Bool shouldRevealAppLinkBannerForNextCommit; // @synthesize shouldRevealAppLinkBannerForNextCommit=_shouldRevealAppLinkBannerForNextCommit;
@property(retain, nonatomic) PinnableBanner *appBanner; // @synthesize appBanner=_appBanner;
@property(retain, nonatomic) _SFDownloadController *downloadController; // @synthesize downloadController=_downloadController;
@property(readonly, nonatomic) _SFReloadOptionsController *reloadOptionsController; // @synthesize reloadOptionsController=_reloadOptionsController;
@property(readonly, nonatomic) NSString *findOnPageSearchText; // @synthesize findOnPageSearchText=_findString;
@property(readonly, nonatomic) WBSFluidProgressState *progressState; // @synthesize progressState=_fluidProgressState;
@property(retain, nonatomic) PageLoadTestStatistics *pageLoadStatistics; // @synthesize pageLoadStatistics=_pageLoadStatistics;
@property(nonatomic) long long externalAppRedirectState; // @synthesize externalAppRedirectState=_externalAppRedirectState;
@property(nonatomic) _Bool siteCustomIconPrecomposed; // @synthesize siteCustomIconPrecomposed;
@property(retain, nonatomic) UIImage *siteCustomIcon; // @synthesize siteCustomIcon;
@property(nonatomic) long long readerViewTopScrollOffset; // @synthesize readerViewTopScrollOffset=_readerViewTopScrollOffset;
@property(nonatomic) _Bool shouldRestoreReader; // @synthesize shouldRestoreReader=_shouldRestoreReader;
@property(nonatomic, getter=isShowingReader) _Bool showingReader; // @synthesize showingReader=_showingReader;
@property(readonly, retain, nonatomic) QuickLookDocumentController *quickLookDocumentController; // @synthesize quickLookDocumentController=_quickLookDocumentController;
@property(nonatomic) _Bool wasOpenedFromLink; // @synthesize wasOpenedFromLink=_wasOpenedFromLink;
@property(retain, nonatomic) QuickLookDocument *quickLookDocument; // @synthesize quickLookDocument=_quickLookDocument;
@property(retain, nonatomic) NSString *fileDownloadPath; // @synthesize fileDownloadPath=_fileDownloadPath;
@property(retain, nonatomic) _WKDownload *fileDownload; // @synthesize fileDownload=_fileDownload;
- (void).cxx_destruct;
- (_Bool)dialogControllerShouldSuppressDialogs:(id)arg1;
- (_Bool)formAutoFillControllerShouldDisableAutoFill:(id)arg1;
- (id)formAutoFillControllerURLForFormAutoFill:(id)arg1;
- (_Bool)formAutoFillControllerCanPrefillForm:(id)arg1;
- (_Bool)hasMatches;
- (void)updateSearchText:(id)arg1;
- (void)done;
- (void)next;
- (void)previous;
- (id)textForToolbarLabel;
- (void)getShortMatchLabelText:(id *)arg1 longMatchLabelText:(id *)arg2;
- (struct UIEdgeInsets)_webView:(id)arg1 finalObscuredInsetsForScrollView:(id)arg2 withVelocity:(struct CGPoint)arg3 targetContentOffset:(inout struct CGPoint *)arg4;
- (void)_webView:(id)arg1 didFailToFindString:(id)arg2;
- (void)_webView:(id)arg1 didFindMatches:(unsigned long long)arg2 forString:(id)arg3 withMatchIndex:(long long)arg4;
- (void)_webView:(id)arg1 didCountMatches:(unsigned long long)arg2 forString:(id)arg3;
- (void)findOnPageCompletionProvider:(id)arg1 setStringToComplete:(id)arg2;
- (void)_setFindingInWebViewIfNecessary;
- (void)dismissFindOnPage;
- (void)prepareFindOnPageWithString:(id)arg1;
- (void)didFindAppBannerWithContent:(id)arg1;
- (void)didAutoDetectSiteSpecificSearchProviderWithOriginatingURL:(id)arg1 searchURLTemplate:(id)arg2;
- (void)_webView:(id)arg1 logDiagnosticMessageWithValue:(id)arg2 description:(id)arg3 value:(id)arg4;
- (void)_webView:(id)arg1 logDiagnosticMessageWithResult:(id)arg2 description:(id)arg3 result:(long long)arg4;
- (void)_webView:(id)arg1 logDiagnosticMessage:(id)arg2 description:(id)arg3;
- (void)loadingControllerWillStartUserDrivenLoad:(id)arg1;
- (void)loadingController:(id)arg1 willLoadRequest:(id)arg2 userDriven:(_Bool)arg3;
- (void)_webView:(id)arg1 accessoryViewCustomButtonTappedInFormInputSession:(id)arg2;
- (void)_webView:(id)arg1 willSubmitFormValues:(id)arg2 userObject:(id)arg3 submissionHandler:(id)arg4;
- (void)_webView:(id)arg1 didStartInputSession:(id)arg2;
- (void)_webView:(id)arg1 mediaDocumentNaturalSizeChanged:(struct CGSize)arg2;
- (void)_webView:(id)arg1 printFrame:(id)arg2;
- (void)_webView:(id)arg1 decideWebApplicationCacheQuotaForSecurityOrigin:(id)arg2 currentQuota:(unsigned long long)arg3 totalBytesNeeded:(unsigned long long)arg4 decisionHandler:(id)arg5;
- (void)_webView:(id)arg1 decideDatabaseQuotaForSecurityOrigin:(id)arg2 currentQuota:(unsigned long long)arg3 currentOriginUsage:(unsigned long long)arg4 currentDatabaseUsage:(unsigned long long)arg5 expectedUsage:(unsigned long long)arg6 decisionHandler:(id)arg7;
- (void)_webView:(id)arg1 didNotHandleTapAsClickAtPoint:(struct CGPoint)arg2;
- (id)_webView:(id)arg1 actionsForElement:(id)arg2 defaultActions:(id)arg3;
- (_Bool)_webView:(id)arg1 shouldIncludeAppLinkActionsForElement:(id)arg2;
- (id)_actionsForElement:(id)arg1 defaultActions:(id)arg2 previewViewController:(id)arg3;
- (id)actionsForElement:(id)arg1 defaultActions:(id)arg2;
- (id)_addToReadingListActionForElement:(id)arg1 withURL:(id)arg2;
- (id)_openInNewPageActionForElement:(id)arg1 previewViewController:(id)arg2;
- (void)_animateElement:(id)arg1 toToolbarButton:(int)arg2;
- (struct CGRect)_convertRectFromDocumentToWebView:(struct CGRect)arg1;
- (void)_webViewDidExitFullscreen:(id)arg1;
- (void)_webViewDidEnterFullscreen:(id)arg1;
- (void)_webViewFullscreenMayReturnToInline:(id)arg1;
- (void)_webViewClose:(id)arg1;
- (id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(id)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(id)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(id)arg4;
- (void)_webView:(id)arg1 willSnapshotBackForwardListItem:(id)arg2;
- (void)_webViewDidEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2;
- (void)_webViewWillEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2;
- (void)_webViewDidBeginNavigationGesture:(id)arg1;
- (void)_webView:(id)arg1 didFinishLoadForQuickLookDocumentInMainFrame:(id)arg2;
- (void)_webView:(id)arg1 didStartLoadForQuickLookDocumentInMainFrameWithFileName:(id)arg2 uti:(id)arg3;
- (id)_webCryptoMasterKeyForWebView:(id)arg1;
- (void)_webViewWebProcessDidCrash:(id)arg1;
- (void)_webView:(id)arg1 renderingProgressDidChange:(unsigned long long)arg2;
- (void)_webView:(id)arg1 navigation:(id)arg2 didSameDocumentNavigation:(long long)arg3;
- (void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(id)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)_fetchIconURLsWithCompletion:(id)arg1;
@property(readonly, nonatomic) WBUWebClipMetadataFetcher *webClipMetadataFetcher;
@property(readonly, nonatomic) WBUInjectedJavaScriptController *activityJSController;
- (void)_webView:(id)arg1 didDismissPreviewViewController:(id)arg2;
- (void)_webView:(id)arg1 commitPreviewedImageWithURL:(id)arg2;
- (void)_webView:(id)arg1 willPreviewImageWithURL:(id)arg2;
- (void)_webView:(id)arg1 commitPreviewedViewController:(id)arg2;
- (id)_webView:(id)arg1 previewViewControllerForAnimatedImageAtURL:(id)arg2 defaultActions:(id)arg3 elementInfo:(id)arg4 imageSize:(struct CGSize)arg5;
- (id)_webView:(id)arg1 previewViewControllerForURL:(id)arg2 defaultActions:(id)arg3 elementInfo:(id)arg4;
- (id)_webView:(id)arg1 previewViewControllerForURL:(id)arg2;
- (id)tabDocumentForPreviewURL:(id)arg1 relatedToWebView:(id)arg2;
- (void)_willCommitPreviewViewController:(id)arg1;
- (void)_webView:(id)arg1 navigationDidFinishDocumentLoad:(id)arg2;
- (void)_webView:(id)arg1 navigation:(id)arg2 didFailProvisionalLoadInSubframe:(id)arg3 withError:(id)arg4;
- (void)webView:(id)arg1 didCommitNavigation:(id)arg2;
- (void)_clearNavigationSource;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(id)arg3;
- (void)_checkForAppLink;
- (void)invalidateSourceApplication;
- (void)preparePrintInteractionController:(id)arg1 withPageRenderer:(id)arg2 frame:(id)arg3 printFooter:(_Bool)arg4;
- (void)subscribeToWebFeed;
- (void)saveWebArchiveToPath:(id)arg1 completion:(id)arg2;
- (void)setQuickLookDocumentFromCurrentBackForwardListItem:(id)arg1;
- (id)quickLookDocumentFromCurrentBackForwardListItem;
- (void)_performSafeBrowsingCheckForURL:(id)arg1;
- (_Bool)quickLookDocumentIsReady;
@property(readonly, nonatomic) _SFSafariSharingExtensionController *sharingExtensionController;
- (void)loadTestURL:(id)arg1 withCallback:(id)arg2 measureMemory:(_Bool)arg3;
- (void)loadTestURL:(id)arg1 withCallback:(id)arg2;
- (id)standaloneImageData;
- (id)suggestedFilenameForDisplayedPDF;
- (id)dataForDisplayedPDF;
@property(copy, nonatomic) NSString *customUserAgent;
- (id)_addTitlePrefixToString:(id)arg1;
- (_Bool)_shouldAskAboutInsecureFormSubmissionForAction:(id)arg1 andURL:(id)arg2;
- (void)_forceStopLoading;
- (void)_loadStartedDuringSimulatedClickForURL:(id)arg1;
- (_Bool)isProcessingUserGesture;
- (void)_updateInitialZoomScaleForPPT;
- (id)_backForwardList;
- (void)loadAlternateHTMLString:(id)arg1 baseURL:(id)arg2 forUnreachableURL:(id)arg3;
- (void)_setRenderTreeSizeThresholdForReset:(unsigned long long)arg1;
- (unsigned long long)_renderTreeSize;
- (void)_destroyDocumentView;
- (void)_createDocumentViewWithConfiguration:(id)arg1;
- (void)_createDocumentViewRelatedTo:(id)arg1;
- (id)_webViewConfiguration;
- (void)performAutoFillAction;
- (void)setAllowsRemoteInspection:(_Bool)arg1;
- (_Bool)hasFailedURL;
- (id)expectedOrCurrentURL;
- (id)committedURL;
- (void)setLoading;
- (void)finishSimulatedClick;
- (void)beginSimulatedClickForURL:(id)arg1;
- (_Bool)isSimulatingClick;
- (void)becomeFirstResponderWithSelectionMovingForward:(_Bool)arg1 completionHandler:(id)arg2;
- (struct __SecTrust *)_serverTrust;
- (_Bool)mustShowBarsForBackForwardListItem:(id)arg1;
- (void)restoreSessionState:(id)arg1 andNavigate:(_Bool)arg2;
@property(readonly, nonatomic) _WKSessionState *sessionState;
@property(readonly, nonatomic, getter=isAlive) _Bool alive;
- (void)unhibernateWithRelatedWebView:(id)arg1;
- (void)unhibernate;
- (void)hibernate;
- (void)clearBackForwardList;
- (void)clearBackForwardListKeepingCurrentItem;
- (void)goToBackForwardListItem:(id)arg1;
@property(readonly, nonatomic) NSString *currentHistoryItemOriginalURLString;
- (id)_forwardListWithLimit:(unsigned long long)arg1;
- (id)_backListWithLimit:(unsigned long long)arg1;
- (_Bool)isPDFDocument;
- (void)stopLoading;
- (id)_loadNextFallbackURLWithWebClip:(id)arg1;
- (id)loadWebClip:(id)arg1 userDriven:(_Bool)arg2;
- (void)_updateFallbackURLsForUserTypedAddress:(id)arg1;
- (id)loadUserTypedAddress:(id)arg1;
- (void)setOverlaidAccessoryViewsInset:(struct CGSize)arg1;
- (id)pdfView;
- (id)URLString;
- (void)updateInternalPreferences;
- (void)_loadingControllerDidStopLoadingWithError:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)_initWithBrowserController:(id)arg1 configuration:(id)arg2;
- (void)doneWaitingToContinueUserActivity;
- (void)didFailToContinueUserActivity;
- (void)prepareToContinueUserActivity;
- (void)_showProfileInstallAlert;
- (void)setStoreBanner:(id)arg1 isPinned:(_Bool)arg2;
- (void)dismissStoreBanner:(id)arg1;
- (_Bool)supportsFindOnPage;
- (void)setClosed:(_Bool)arg1 userDriven:(_Bool)arg2;
- (void)setClosed:(_Bool)arg1;
- (_Bool)isClosed;
- (void)setUserHasManipulatedVisibleRegion:(_Bool)arg1;
- (_Bool)canSubscribeToWebFeed;
- (void)_showGenericDownloadAlert;
- (id)resultOfLoadingURL:(id)arg1;
- (id)_resultOfLoadingRequest:(id)arg1 inMainFrame:(_Bool)arg2;
- (void)_decidePolicyForAction:(id)arg1 request:(id)arg2 inMainFrame:(_Bool)arg3 forNewWindow:(_Bool)arg4 currentURLIsFileURL:(_Bool)arg5 decisionHandler:(id)arg6;
- (_Bool)_navigationIsRedirectToAppStore:(id)arg1;
- (void)_decidePolicyForResponse:(id)arg1 request:(id)arg2 inMainFrame:(_Bool)arg3 decisionHandler:(id)arg4;
- (id)_readingListArchiveNextPageLinkForRequest:(id)arg1;
- (void)_redirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 promptPolicy:(long long)arg3 isMainFrame:(_Bool)arg4;
- (_Bool)_shouldPromptUserForExternalNavigationResult:(id)arg1 policy:(long long)arg2;
- (void)_queueAlertForRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 isMainFrame:(_Bool)arg3 promptPolicy:(long long)arg4;
- (void)_addNoFeedAppSupportAlert;
- (void)_didRedirectToAnotherApp:(id)arg1 userCancelled:(_Bool)arg2;
- (void)_stoppedLoadingResources;
- (void)_startedLoadingResources;
- (double)lastPageLoadTime;
- (double)lastPageVisualLayoutTime;
- (void)_notifyPageLoadDidFinishIfNecessary;
- (void)_setAppBannerWhenPainted:(id)arg1;
- (void)_clearAppBanner;
- (id)_EVOrganizationName;
- (void)_invalidateEVOrganizationName;
- (_Bool)_isSecure;
- (id)forwardListControllerWithLimit:(int)arg1;
- (id)backListControllerWithLimit:(int)arg1;
- (_Bool)canGoForward;
- (_Bool)canGoBack;
- (void)_updateShowingContinuous;
- (void)setAutomaticReadingListItem:(id)arg1;
- (unsigned int)readingListBookmarkID;
- (void)readerContentIsReadyForDisplay;
- (_Bool)shouldActivateReaderWhenAvailable;
- (_Bool)currentPageLoadedFromReadingList;
- (_Bool)loadWasUserDriven;
- (void)reloadAllowingContentBlockers:(_Bool)arg1;
- (void)reload;
- (void)goForward;
- (void)goBack;
- (void)restoreScrollPositionWithCloudTab:(id)arg1;
- (id)loadCloudTab:(id)arg1;
- (id)loadAutomaticReadingListItem:(id)arg1;
- (id)loadURL:(id)arg1 fromBookmark:(id)arg2;
- (void)clearPageLoadStatistics;
- (id)_loadURLInternal:(id)arg1 userDriven:(_Bool)arg2;
- (id)loadURL:(id)arg1 userDriven:(_Bool)arg2;
- (void)snapshotForWebClipIcon:(id)arg1;
- (void)_updateSnapshotForWebClip:(id)arg1;
- (id)loadRequest:(id)arg1 userDriven:(_Bool)arg2;
- (id)titleForSharing;
- (id)titleForNewBookmark;
- (id)title;
- (_Bool)hasQuickLookContent;
- (_Bool)isLoading;
- (void)clearBrowserController;
- (void)clearTabReuseURL;
- (id)URLForSharing;
- (id)URL;
- (id)customUserVisibleStringForReadingListBookmarkURL:(id)arg1;
- (void)fluidProgressRocketAnimationDidComplete;
- (id)currentFluidProgressStateSource;
- (void)endSuppressingProgressAnimationAnimated:(_Bool)arg1;
- (void)endSuppressingProgressAnimation;
- (void)beginSuppressingProgressAnimation;
- (void)clearFluidProgressState;
- (_Bool)createFluidProgressState;
- (void)animateProgressForCompletedDocument;
- (void)_loadingControllerEstimatedProgressChangedTo:(double)arg1;
- (void)_loadingControllerDidStartLoading;
- (void)_loadingControllerWillLoadRequest:(id)arg1 userDriven:(_Bool)arg2;
- (void)_webViewDidCommitLoadForMainFrame;
- (void)_hideQuickLookDocumentView;
- (void)_showQuickLookDocumentView;
- (void)reinsertQuickLookDocumentView;
- (double)estimatedProgress;
- (void)willClose;
- (void)_closeTabDocumentAnimated:(_Bool)arg1;
- (void)invalidateContinuityActivity;
- (void)updateContinuityActivity;
- (void)setActive:(_Bool)arg1;
- (void)becameActive;
- (void)setDelegate:(id)arg1;
@property(readonly, nonatomic) UIView *frontView;
- (void)_setNeedsNewTabSnapshotAndRemoveOld:(_Bool)arg1;
- (void)setNeedsNewTabSnapshot;
- (void)unfreezeAfterNavigationGesture:(_Bool)arg1;
- (void)freezeForNavigationGesture;
- (_Bool)isHibernated;
- (void)_cancelAntiPhishingCheckAndInvalidateSafeBrowsingObserver;
@property(readonly, nonatomic) _SFNavigationBarItem *navigationBarItem;
- (id)initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(_Bool)arg4 hibernated:(_Bool)arg5 bookmark:(id)arg6 browserController:(id)arg7 relatedWebView:(id)arg8;
- (id)_initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(_Bool)arg4 bookmark:(id)arg5 browserController:(id)arg6 createDocumentView:(id)arg7;
- (void)_updateNavigationBarItem;
- (void)_updateStackName;
- (void)_searchEngineControllerDidBecomeAvailable:(id)arg1;
- (void)updateTabTitle;
- (id)tabBarTitle;
- (id)rawTitle;
- (id)_titleIncludeLoading:(_Bool)arg1 allowURLStringFallback:(_Bool)arg2;
- (id)_titleIncludeLoading:(_Bool)arg1 allowURLStringFallback:(_Bool)arg2 allowUntitled:(_Bool)arg3;
- (void)dealloc;
@property(readonly, copy) NSString *description;
- (id)initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(_Bool)arg4 hibernated:(_Bool)arg5 bookmark:(id)arg6 browserController:(id)arg7;
- (id)initWithBrowserController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end